
git flow help

Git/ git flow compare commands
https://gist.github.com/JamesMGreene/cdd0ac49f90c987e45ac

git flow help
  usage: git flow <subcommand>

  Available subcommands are:
   init      Initialize a new git repo with support for the branching model.
   feature   Manage your feature branches.
   bugfix    Manage your bugfix branches.
   release   Manage your release branches.
   hotfix    Manage your hotfix branches.
   support   Manage your support branches.
   version   Shows version information.
   config    Manage your git-flow configuration.
   log       Show log deviating from base branch.
   
git flow init
  usage: git flow init [-h] [-d] [-f]

    Setup a git repository for git flow usage. Can also be used to start a git repository.

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -d, --[no]defaults    Use default branch naming conventions
    -f, --[no]force       Force setting of gitflow branches, even if already configured
    --Use                 config file location
    --local               use repository config file
    --global              use global config file
    --system              use system config file
    --file ...            use given config file
	
git flow feature
  usage: git flow feature [list]
   or: git flow feature start
   or: git flow feature finish
   or: git flow feature publish
   or: git flow feature track
   or: git flow feature diff
   or: git flow feature rebase
   or: git flow feature checkout
   or: git flow feature pull
   or: git flow feature delete

    Manage your feature branches.
	
  git flow feature
	usage: git flow feature [list] [-h] [-v]

    Lists all the existing feature branches in the local repository.

    -h, --help            Show this help
    -v, --verbose         Verbose (more) output
	
  git flow feature start
	usage: git flow feature start [-h] [-F] <name> [<base>]

    Start new feature <name>, optionally basing it on <base> instead of <develop>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing local operation
	
  git flow feature finish
	usage: git flow feature finish [-h] [-F] [-r] [-p] [-k] [-D] [-S] [--no-ff] <name|nameprefix>

    Finish feature <name>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -r, --[no]rebase      Rebase before merging
    -p, --[no]preserve-merges
                          Preserve merges while rebasing
    --[no]push            Push to origin after performing finish
    -k, --[no]keep        Keep branch after performing finish
    --keepremote          Keep the remote branch
    --keeplocal           Keep the local branch
    -D, --[no]force_delete
                          Force delete feature branch after finish
    -S, --[no]squash      Squash feature during merge
    --no-ff               Never fast-forward during the merge
	
  git flow feature publish 
    usage: git flow feature publish [-h] [<name>]

    Publish feature branch <name> on origin.
    When <name> is omitted the current branch is used, but only if it's a feature branch.

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow feature track   
    usage: git flow feature track [-h] <name>

    Start tracking feature <name> that is shared on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow feature diff    
    usage: git flow feature diff [-h] [<name|nameprefix>]

    Show all changes in <name> that are not in the base

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow feature rebase  
    usage: git flow feature rebase [-h] [-i] [-p] [<name|nameprefix>]

    Rebase <name> on <base_branch>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -i, --[no]interactive
                          Do an interactive rebase
    -p, --[no]preserve-merges
                          Preserve merges

  git flow feature checkout
    usage: git flow feature checkout [-h] [<name|nameprefix>]

    Switch to feature branch <name>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow feature pull    
    usage: git flow feature pull [-h] <remote> [<name>]

    Pull feature <name> from <remote>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow feature delete  
    usage: git flow feature delete [-h] [-f] [-r] <name>

    Delete a given feature branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -f, --[no]force       Force deletion
    -r, --[no]remote      Delete remote branch


git flow bugfix
  usage: git flow bugfix [list]
   or: git flow bugfix start
   or: git flow bugfix finish
   or: git flow bugfix publish
   or: git flow bugfix track
   or: git flow bugfix diff
   or: git flow bugfix rebase
   or: git flow bugfix checkout
   or: git flow bugfix pull
   or: git flow bugfix delete

    Manage your bugfix branches.
	
  git flow bugfix
    usage: git flow bugfix [list] [-h] [-v]

    Lists all the existing bugfix branches in the local repository.

    -h, --help            Show this help
    -v, --verbose         Verbose (more) output
  git flow bugfix start    
    usage: git flow bugfix start [-h] [-F] <name> [<base>]

    Start new bugfix <name>, optionally basing it on <base> instead of <develop>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing local operation

  git flow bugfix finish   
    usage: git flow bugfix finish [-h] [-F] [-r] [-p] [-k] [-D] [-S] [--no-ff] <name|nameprefix>

    Finish bugfix <name>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -r, --[no]rebase      Rebase before merging
    -p, --[no]preserve-merges
                          Preserve merges while rebasing
    --[no]push            Push to origin after performing finish
    -k, --[no]keep        Keep branch after performing finish
    --keepremote          Keep the remote branch
    --keeplocal           Keep the local branch
    -D, --[no]force_delete
                          Force delete bugfix branch after finish
    -S, --[no]squash      Squash bugfix during merge
    --no-ff               Never fast-forward during the merge

  git flow bugfix publish  
    usage: git flow bugfix publish [-h] [<name>]

    Publish bugfix branch <name> on origin.
    When <name> is omitted the current branch is used, but only if it's a bugfix branch.

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow bugfix track    
    usage: git flow bugfix track [-h] <name>

    Start tracking bugfix <name> that is shared on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow bugfix diff     
    usage: git flow bugfix diff [-h] [<name|nameprefix>]

    Show all changes in <name> that are not in the base

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow bugfix rebase   
    usage: git flow bugfix rebase [-h] [-i] [-p] [<name|nameprefix>]

    Rebase <name> on <base_branch>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -i, --[no]interactive
                          Do an interactive rebase
    -p, --[no]preserve-merges
                          Preserve merges

  git flow bugfix checkout 
    usage: git flow bugfix checkout [-h] [<name|nameprefix>]

    Switch to bugfix branch <name>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow bugfix pull     
    usage: git flow bugfix pull [-h] <remote> [<name>]

    Pull bugfix <name> from <remote>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow bugfix delete   
    usage: git flow bugfix delete [-h] [-f] [-r] <name>

    Delete a given bugfix branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -f, --[no]force       Force deletion
    -r, --[no]remote      Delete remote branch

git flow release
  usage: git flow release [list]
   or: git flow release start
   or: git flow release finish
   or: git flow release publish
   or: git flow release track
   or: git flow release delete

    Manage your release branches.
	
  git flow release
    usage: git flow release [list] [-h] [-v]

    List existing release branches

    -h, --help            Show this help
    -v, --verbose         verbose (more) output
	
  git flow release start   
    usage: git flow release start [options] <version> [<base>]

    Start a new release branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -v, --verbose         Verbose (more) output

  git flow release finish  
    usage: git flow release finish [-h] [-F] [-s] [-u] [-m | -f] [-p] [-k] [-n] [-b] [-S] <version>


    Finish a release branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -s, --sign            Sign the release tag cryptographically
    -u, --signingkey      Use the given GPG-key for the digital signature (implies -s)
    -m, --message         Use the given tag message
    -f, --[no]messagefile ...
                          Use the contents of the given file as a tag message
    -p, --[no]push        Push to origin after performing finish
    --[no]pushproduction  Push the production branch
    --[no]pushdevelop     Push the develop branch
    --[no]pushtag         Push the tag
    -k, --[no]keep        Keep branch after performing finish
    --[no]keepremote      Keep the remote branch
    --[no]keeplocal       Keep the local branch
    -D, --[no]force_delete
                          Force delete release branch after finish
    -n, --[no]tag         Don't tag this release
    -b, --[no]nobackmerge
                          Don't back-merge master, or tag if applicable, in develop
    -S, --[no]squash      Squash release during merge
    --[no]ff-master       Fast forward master branch if possible
    -T, --tagname         Use given tag name

  git flow release publish 
    usage: git flow release publish [-h] <name>

    Publish the release branch <name> on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow release track   
    usage: git flow release track [-h] <name>

    Start tracking release <name> that is shared on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow release delete  
    usage: git flow release delete [-h] [-f] [-r] <name>

    Delete the given release branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -f, --[no]force       Force deletion
    -r, --[no]remote      Delete remote branch


git flow hotfix
  usage: git flow hotfix [list]
   or: git flow hotfix start
   or: git flow hotfix finish
   or: git flow hotfix publish
   or: git flow hotfix delete

    Manage your hotfix branches.
	
  git flow hotfix
    usage: git flow hotfix [list] [-h] [-v]

    Lists all local hotfix branches

    -h, --help            Show this help
    -v, --verbose         Verbose (more) output
	
  git flow hotfix start   
    usage: git flow hotfix start [-h] [-F] <version> [<base>]

    Start new hotfix branch named <version>, optionally base it on <base> instead of the <master> branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing local operation

  git flow hotfix finish  
    usage: git flow hotfix finish [-h] [-F] [-s] [-u] [-m | -f ] [-p] [-k] [-n] [-b] [-S] <version>

    Finish hotfix branch <version>

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -F, --[no]fetch       Fetch from origin before performing finish
    -s, --[no]sign        Sign the release tag cryptographically
    -u, --[no]signingkey  Use the given GPG-key for the digital signature (implies -s)
    -m, --[no]message     Use the given tag message
    -f, --[no]messagefile ...
                          Use the contents of the given file as tag message
    -p, --[no]push        Push to origin after performing finish
    -k, --[no]keep        Keep branch after performing finish
    --[no]keepremote      Keep the remote branch
    --[no]keeplocal       Keep the local branch
    -D, --[no]force_delete
                          Force delete hotfix branch after finish
    -n, --[no]notag       Don't tag this hotfix
    -b, --[no]nobackmerge
                          Don't back-merge master, or tag if applicable, in develop
    -S, --[no]squash      Squash hotfix during merge
    -T, --tagname         Use given tag name

  git flow hotfix publish 
    usage: git flow hotfix publish [-h] <version>

    Start sharing hotfix <name> on origin

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git flow hotfix delete  
    usage: git flow hotfix delete [-h] [-f] [-r] <name>

    Delete the given hotfix branch

    -h, --help            Show this help
    --showcommands        Show git commands while executing them
    -f, --[no]force       Force deletion
    -r, --[no]remote      Delete remote branch

	
git flow support
  usage: git flow support [list]
   or: git flow support start

    Manage your support branches.

  git flow support
    usage: git flow support [list] [-h] [-v]

    List all local support branches

    -h, --help            Show this help
    -v, --verbose         Verbose (more) output

git flow version
  usage: git flow version

    Shows version information.
	
git flow config
  usage: git flow config [list]
   or: git flow config set
   or: git flow config base

    Manage the git-flow configuration.

  git flow config
    usage: git flow config [list]

    Show the git-flow configurations

    -h, --help            Show this help
    --Use                 config file location
    --local               Use repository config file
    --global              Use global config file
    --system              Use system config file
    --file ...            Use given config file

  git flow config set  
    usage: git flow config set <option> <value>

    Set the git-flow configuration option to the given value

    -h, --help            Show this help
    --local               Use repository config file
    --global              Use global config file
    --system              Use system config file
    --file ...            Use given config file

  git flow config base 
    usage: git flow config base [<options>] <branch> [<base>]

    Set the given <base> for the given <branch>

    -h, --help            Show this help
    --get                 Get the base for the given branch (default behavior).
    --set                 Set the given base for the given branch.
	
git flow log
  usage: git flow log

    shows current branch log compared to develop
    'git help log' for arguments

  git flow log
    usage: git flow feature log [<options>]

    Show log on <feature> branch since the fork of <develop> branch
    Options come from git log

    -h, --help            Show this help
    --showcommands        Show git commands while executing them

  git help log
	
	
	
Override defaults
example: 
			   CMD:  git config gitflow.feature.start.fetch true
		ConfigFile:  gitflow.feature.start.fetch true

git config --global gitflow.branch.master PROD
git config --global gitflow.branch.develop PRUE
git config --global gitflow.prefix.feature DESA-
git config --global gitflow.prefix.release DEMO-
git config --global gitflow.prefix.bugfix BUG-
git config --global gitflow.prefix.hotfix INCI-
git config --global gitflow.prefix.support SPT-
git config --global gitflow.prefix.versiontag Ver-
git config --global gitflow.origin origin

git config --global gitflow.bugfix.start.fetch true
git config --global gitflow.bugfix.finish.fetch true
git config --global gitflow.bugfix.finish.rebase true
git config --global gitflow.bugfix.finish.push true       
git config --global gitflow.bugfix.finish.keepremote true
git config --global gitflow.bugfix.finish.keeplocal false
git config --global gitflow.bugfix.finish.no-ff true
git config --global gitflow.bugfix.finish.preserve-merges false
git config --global gitflow.bugfix.rebase.interactive false
git config --global gitflow.bugfix.rebase.preserve-merges false
git config --global gitflow.bugfix.delete.force false
git config --global gitflow.bugfix.delete.remote true

git config --global gitflow.feature.start.fetch true
git config --global gitflow.feature.finish.fetch true          
git config --global gitflow.feature.finish.rebase true
git config --global gitflow.feature.finish.preserve-merges false
git config --global gitflow.feature.finish.push true
git config --global gitflow.feature.finish.keepremote true
git config --global gitflow.feature.finish.keeplocal false
git config --global gitflow.feature.finish.no-ff true
git config --global gitflow.feature.rebase.interactive false    
git config --global gitflow.feature.rebase.preserve-merges false
git config --global gitflow.feature.delete.force false
git config --global gitflow.feature.delete.remote true

git config --global gitflow.hotfix.start.fetch true
git config --global gitflow.hotfix.rebase.interactive false    
git config --global gitflow.hotfix.rebase.preserve-merges false
git config --global gitflow.hotfix.finish.fetch true       
git config --global gitflow.hotfix.finish.push true        
git config --global gitflow.hotfix.finish.keepremote true  
git config --global gitflow.hotfix.finish.keeplocal false   
git config --global gitflow.hotfix.delete.force false
git config --global gitflow.hotfix.finish.remote true

git config --global gitflow.init.defaults true

git config --global gitflow.release.start.fetch true
git config --global gitflow.release.finish.fetch true         
git config --global gitflow.release.finish.push true          
git config --global gitflow.release.finish.pushproduction true
git config --global gitflow.release.finish.pushdevelop true
git config --global gitflow.release.finish.keepremote true    
git config --global gitflow.release.finish.keeplocal false     
git config --global gitflow.release.branch.fetch true      
git config --global gitflow.release.finish.ff-master true
git config --global gitflow.release.branch.push true       
git config --global gitflow.release.rebase.interactive false    
git config --global gitflow.release.rebase.preserve-merges false
git config --global gitflow.release.delete.fetch true 
git config --global gitflow.release.delete.remote false

git config --global gitflow.support.start.fetch true
git config --global gitflow.support.rebase.interactive false    
git config --global gitflow.support.rebase.preserve-merges false



???????????
git config --global gitflow.bugfix.finish.keep
git config --global gitflow.bugfix.finish.force-delete
git config --global gitflow.bugfix.finish.squash   
git config --global gitflow.bugfix.finish.squash-info

git config --global gitflow.feature.finish.keep
git config --global gitflow.feature.finish.force-delete
git config --global gitflow.feature.finish.squash
git config --global gitflow.feature.finish.squash-info

git config --global gitflow.hotfix.finish.sign        
git config --global gitflow.hotfix.finish.keep        
git config --global gitflow.hotfix.finish.force-delete
git config --global gitflow.hotfix.finish.notag       
git config --global gitflow.hotfix.finish.nobackmerge 
git config --global gitflow.hotfix.finish.squash      
git config --global gitflow.hotfix.finish.squash-info 
git config --global gitflow.hotfix.finish.signingkey  
git config --global gitflow.hotfix.finish.message     
git config --global gitflow.hotfix.finish.messagefile 

git config --global gitflow.release.finish.sign      
git config --global gitflow.release.finish.keep              
git config --global gitflow.release.finish.pushtag       
git config --global gitflow.release.finish.force-delete  
git config --global gitflow.release.finish.notag         
git config --global gitflow.release.finish.nobackmerge true
git config --global gitflow.release.finish.squash        
git config --global gitflow.release.finish.squash-info
     
git config --global gitflow.release.finish.signingkey    
git config --global gitflow.release.finish.message       
git config --global gitflow.release.finish.messagefile   
git config --global gitflow.release.branch.sign       
git config --global gitflow.release.branch.notag      
git config --global gitflow.release.branch.squash     
git config --global gitflow.release.branch.squash-info
git config --global gitflow.release.branch.signingkey 
git config --global gitflow.release.branch.message    
git config --global gitflow.release.branch.messagefile
